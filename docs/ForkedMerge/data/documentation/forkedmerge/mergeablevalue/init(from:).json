{"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"modules":[{"name":"ForkedMerge"}],"roleHeading":"Initializer","externalID":"s:11ForkedMerge14MergeableValueVAASeRzSERzrlE4fromACyxGs7Decoder_p_tKcfc","conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":", and "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"init(from:)","extendedModule":"ForkedMerge","symbolKind":"init"},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"decoder"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/forkedmerge\/mergeablevalue\/init(from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(from:)"},"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"url":"\/documentation\/forkedmerge\/mergeablevalue","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"type":"text","text":" "},{"text":"This allows the type to automatically merge simply by choosing the value that was written later.","type":"text"},{"type":"text","text":" "},{"text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Pregui√ßa, C Baquero, M Zawirski - 2011 - hal.inria.fr"}],"kind":"symbol","type":"topic","title":"MergeableValue","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MergeableValue","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"MergeableValue","kind":"identifier"}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Decodable-Implementations":{"kind":"article","title":"Decodable Implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations","url":"\/documentation\/forkedmerge\/mergeablevalue\/decodable-implementations","role":"collectionGroup","abstract":[],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge":{"url":"\/documentation\/forkedmerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","title":"ForkedMerge","kind":"symbol","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/init(from:)":{"title":"init(from:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(from:)","url":"\/documentation\/forkedmerge\/mergeablevalue\/init(from:)","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": any "},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[]}}}