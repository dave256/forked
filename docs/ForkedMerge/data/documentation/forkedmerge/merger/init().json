{"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/init()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","metadata":{"role":"symbol","externalID":"s:11ForkedMerge6MergerPxycfc","roleHeading":"Initializer","required":true,"symbolKind":"init","title":"init()","modules":[{"name":"ForkedMerge"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}]},"variants":[{"paths":["\/documentation\/forkedmerge\/merger\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"text":"()","kind":"text"}]}]}],"references":{"doc://ForkedMerge/documentation/ForkedMerge":{"url":"\/documentation\/forkedmerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","title":"ForkedMerge","kind":"symbol","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/Merger/init()":{"required":true,"abstract":[],"kind":"symbol","url":"\/documentation\/forkedmerge\/merger\/init()","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger\/init()","type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()"},"doc://ForkedMerge/documentation/ForkedMerge/Merger":{"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","type":"topic","abstract":[{"type":"text","text":"A merger is a type that applies a merging algorithm to merge two values together."},{"text":" ","type":"text"},{"type":"text","text":"The values are typically of a simple type. The algorithm could be anything, from a"},{"text":" ","type":"text"},{"type":"text","text":"simple most recent edit wins, to more advanced CRDT based approaches that use"},{"type":"text","text":" "},{"type":"text","text":"diffing against a common ancestor."}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Merger","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/merger","navigatorTitle":[{"text":"Merger","kind":"identifier"}],"title":"Merger"}}}