{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablevalue"]}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue"},"relationshipsSections":[{"identifiers":["doc:\/\/ForkedMerge\/6Forked9MergeableP","doc:\/\/ForkedMerge\/s8CopyableP","doc:\/\/ForkedMerge\/Se","doc:\/\/ForkedMerge\/SE","doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MergeableValue","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SQ","kind":"typeIdentifier","text":"Equatable"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"topicSections":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value"],"generated":true},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations"],"anchor":"Default-Implementations","generated":true,"title":"Default Implementations"}],"abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"type":"text","text":" "},{"text":"This allows the type to automatically merge simply by choosing the value that was written later.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely."},{"text":" ","type":"text"},{"text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"metadata":{"title":"MergeableValue","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableValue"}],"symbolKind":"struct","externalID":"s:11ForkedMerge14MergeableValueV","modules":[{"name":"ForkedMerge"}],"roleHeading":"Structure","role":"symbol","navigatorTitle":[{"text":"MergeableValue","kind":"identifier"}]},"references":{"doc://ForkedMerge/SE":{"title":"Swift.Encodable","identifier":"doc:\/\/ForkedMerge\/SE","type":"unresolvable"},"doc://ForkedMerge/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/ForkedMerge\/SQ","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Mergeable-Implementations":{"kind":"article","title":"Mergeable Implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations","url":"\/documentation\/forkedmerge\/mergeablevalue\/mergeable-implementations","role":"collectionGroup","abstract":[],"type":"topic"},"doc://ForkedMerge/6Forked9MergeableP":{"title":"Forked.Mergeable","identifier":"doc:\/\/ForkedMerge\/6Forked9MergeableP","type":"unresolvable"},"doc://ForkedMerge/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/ForkedMerge\/SH","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge":{"url":"\/documentation\/forkedmerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","title":"ForkedMerge","kind":"symbol","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"url":"\/documentation\/forkedmerge\/mergeablevalue","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"type":"text","text":" "},{"text":"This allows the type to automatically merge simply by choosing the value that was written later.","type":"text"},{"type":"text","text":" "},{"text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr"}],"kind":"symbol","type":"topic","title":"MergeableValue","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MergeableValue","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"MergeableValue","kind":"identifier"}]},"doc://ForkedMerge/Se":{"identifier":"doc:\/\/ForkedMerge\/Se","title":"Swift.Decodable","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/init(_:)":{"url":"\/documentation\/forkedmerge\/mergeablevalue\/init(_:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)","abstract":[],"kind":"symbol","type":"topic","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Decodable-Implementations":{"kind":"article","title":"Decodable Implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations","url":"\/documentation\/forkedmerge\/mergeablevalue\/decodable-implementations","role":"collectionGroup","abstract":[],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Equatable-Implementations":{"url":"\/documentation\/forkedmerge\/mergeablevalue\/equatable-implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","abstract":[],"kind":"article","type":"topic","title":"Equatable Implementations","role":"collectionGroup"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/value":{"kind":"symbol","title":"value","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"value","kind":"identifier"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/forkedmerge\/mergeablevalue\/value","role":"symbol","abstract":[],"type":"topic"},"doc://ForkedMerge/s8CopyableP":{"title":"Swift.Copyable","type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/s8CopyableP"}}}