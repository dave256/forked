{"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH","doc:\/\/ForkedMerge\/SY"],"kind":"relationships","title":"Conforms To"}],"metadata":{"symbolKind":"enum","role":"symbol","title":"PropertyMerge","roleHeading":"Enumeration","externalID":"s:11ForkedMerge08PropertyB0O","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PropertyMerge"}],"navigatorTitle":[{"text":"PropertyMerge","kind":"identifier"}],"modules":[{"name":"ForkedMerge"}]},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge"],"title":"Enumeration Cases","anchor":"Enumeration-Cases","generated":true},{"anchor":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)"],"generated":true,"title":"Initializers"},{"title":"Default Implementations","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations"],"anchor":"Default-Implementations","generated":true}],"variants":[{"paths":["\/documentation\/forkedmerge\/propertymerge"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PropertyMerge"}],"platforms":["macOS"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"abstract":[{"text":"The algorithm used to merge changes to a property.","type":"text"},{"text":" ","type":"text"},{"text":"Some properties know how to merge themselves; they conform to ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Other types have no intrinsic merge, but can be merged by a ","type":"text"},{"code":"Merger","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","interfaceLanguage":"swift"},"references":{"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/init(rawValue:)":{"abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/init(rawvalue:)","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(rawValue:)","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/textMerge":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge","role":"symbol","abstract":[{"type":"text","text":"Applies the "},{"code":"array","type":"codeVoice"},{"type":"text","text":" merge algorithm to the characters in a string."},{"type":"text","text":" "},{"type":"text","text":"This is suitable for any type of shared text, which may"},{"type":"text","text":" "},{"type":"text","text":"have conflicting edits, like a collaborative editor."},{"type":"text","text":" "},{"type":"text","text":"The variable must be a "},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/forkedmerge\/propertymerge\/textmerge","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"textMerge","kind":"identifier"}],"title":"PropertyMerge.textMerge","type":"topic","kind":"symbol"},"doc://ForkedMerge/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/ForkedMerge\/SQ"},"doc://ForkedMerge/SY":{"type":"unresolvable","title":"Swift.RawRepresentable","identifier":"doc:\/\/ForkedMerge\/SY"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/dictionaryMerge":{"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dictionaryMerge"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Merges dictionaries. When there is a conflict, it will merge using"},{"type":"text","text":" "},{"text":"a MergeableDictionary for each dictionary. If the value type is","type":"text"},{"type":"text","text":" "},{"code":"Mergeable","type":"codeVoice"},{"text":", the dictionary will be merged recursing into the values.","type":"text"}],"title":"PropertyMerge.dictionaryMerge","url":"\/documentation\/forkedmerge\/propertymerge\/dictionarymerge"},"doc://ForkedMerge/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/ForkedMerge\/SH"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/Equatable-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/forkedmerge\/propertymerge\/equatable-implementations","title":"Equatable Implementations","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayMerge":{"role":"symbol","kind":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/arraymerge","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"arrayMerge"}],"title":"PropertyMerge.arrayMerge","abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable."},{"text":" ","type":"text"},{"type":"text","text":"When there is a conflict, it will"},{"text":" ","type":"text"},{"text":"determine the changes made to each version, and merge with an","type":"text"},{"text":" ","type":"text"},{"text":"algorithm that keeps related changes together (eg editing a word).","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Does not guarantee uniqueness of elements after merge:"},{"type":"text","text":" "},{"text":"there can be duplicates created, so it is more suitable to value types","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"like characters in a string. than it is to identifiable types."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge":{"navigatorTitle":[{"text":"PropertyMerge","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/propertymerge","role":"symbol","abstract":[{"text":"The algorithm used to merge changes to a property.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Some properties know how to merge themselves; they conform to "},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Other types have no intrinsic merge, but can be merged by a "},{"type":"codeVoice","code":"Merger"},{"type":"text","text":"."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PropertyMerge"}],"title":"PropertyMerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/setMerge":{"abstract":[{"type":"text","text":"Will merge sets of values. When there is a conflict, it will handle"},{"text":" ","type":"text"},{"text":"it using a MergeableSet for each set of changes.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/setmerge","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"setMerge","kind":"identifier"}],"title":"PropertyMerge.setMerge","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge"},"doc://ForkedMerge/documentation/ForkedMerge":{"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge","title":"ForkedMerge","role":"collection","type":"topic","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayOfIdentifiableMerge":{"role":"symbol","kind":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/arrayofidentifiablemerge","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"arrayOfIdentifiableMerge","kind":"identifier"}],"title":"PropertyMerge.arrayOfIdentifiableMerge","abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable and"},{"type":"text","text":" "},{"type":"text","text":"Identifiable. It will ensure that there are no duplicated identifiers following"},{"text":" ","type":"text"},{"text":"a merge. When there is a conflict, it will","type":"text"},{"type":"text","text":" "},{"text":"determine the changes made to each version, and merge with an","type":"text"},{"text":" ","type":"text"},{"text":"algorithm that keeps related changes together (eg editing a word).","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Guarantees uniqueness of identifiers after merge, but does not"},{"text":" ","type":"text"},{"type":"text","text":"enforce uniqueness of identifiers through updates made directly to the"},{"type":"text","text":" "},{"text":"property.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/RawRepresentable-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/forkedmerge\/propertymerge\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/mergeableProtocol":{"role":"symbol","kind":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/mergeableprotocol","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"mergeableProtocol","kind":"identifier"}],"title":"PropertyMerge.mergeableProtocol","abstract":[{"text":"The property must be a ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":" type, and will be merged accordingly"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"code":"Mergeable","type":"codeVoice"},{"text":" protocol.","type":"text"},{"text":" ","type":"text"},{"text":"This is the default algorithm if ","type":"text"},{"type":"codeVoice","code":"@Merged"},{"text":" has been applied with no","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"algorithm stated."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol"}}}