{"abstract":[{"text":"The algorithm used to merge changes to a property.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Some properties know how to merge themselves; they conform to "},{"type":"codeVoice","code":"Mergeable"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Other types have no intrinsic merge, but can be merged by a ","type":"text"},{"type":"codeVoice","code":"Merger"},{"type":"text","text":"."}],"topicSections":[{"title":"Enumeration Cases","generated":true,"anchor":"Enumeration-Cases","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge"]},{"generated":true,"title":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)"],"anchor":"Initializers"},{"generated":true,"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PropertyMerge","kind":"identifier"}]}]}],"variants":[{"paths":["\/documentation\/forkedmerge\/propertymerge"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH","doc:\/\/ForkedMerge\/SY"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"ForkedMerge"}],"role":"symbol","symbolKind":"enum","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"PropertyMerge","kind":"identifier"}],"navigatorTitle":[{"text":"PropertyMerge","kind":"identifier"}],"roleHeading":"Enumeration","title":"PropertyMerge","externalID":"s:11ForkedMerge08PropertyB0O"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","references":{"doc://ForkedMerge/SY":{"identifier":"doc:\/\/ForkedMerge\/SY","title":"Swift.RawRepresentable","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge":{"url":"\/documentation\/forkedmerge\/propertymerge","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","navigatorTitle":[{"text":"PropertyMerge","kind":"identifier"}],"title":"PropertyMerge","kind":"symbol","abstract":[{"type":"text","text":"The algorithm used to merge changes to a property."},{"type":"text","text":" "},{"text":"Some properties know how to merge themselves; they conform to ","type":"text"},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Other types have no intrinsic merge, but can be merged by a ","type":"text"},{"type":"codeVoice","code":"Merger"},{"type":"text","text":"."}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PropertyMerge"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/setMerge":{"url":"\/documentation\/forkedmerge\/propertymerge\/setmerge","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setMerge"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","title":"PropertyMerge.setMerge","kind":"symbol","abstract":[{"text":"Will merge sets of values. When there is a conflict, it will handle","type":"text"},{"text":" ","type":"text"},{"text":"it using a MergeableSet for each set of changes.","type":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/dictionaryMerge":{"abstract":[{"text":"Merges dictionaries. When there is a conflict, it will merge using","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a MergeableDictionary for each dictionary. If the value type is"},{"type":"text","text":" "},{"type":"codeVoice","code":"Mergeable"},{"text":", the dictionary will be merged recursing into the values.","type":"text"}],"title":"PropertyMerge.dictionaryMerge","url":"\/documentation\/forkedmerge\/propertymerge\/dictionarymerge","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dictionaryMerge","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/Equatable-Implementations":{"url":"\/documentation\/forkedmerge\/propertymerge\/equatable-implementations","role":"collectionGroup","title":"Equatable Implementations","kind":"article","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","abstract":[]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayOfIdentifiableMerge":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","title":"PropertyMerge.arrayOfIdentifiableMerge","role":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"arrayOfIdentifiableMerge","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/arrayofidentifiablemerge","abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable and"},{"type":"text","text":" "},{"text":"Identifiable. It will ensure that there are no duplicated identifiers following","type":"text"},{"text":" ","type":"text"},{"text":"a merge. When there is a conflict, it will","type":"text"},{"type":"text","text":" "},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"type":"text","text":" "},{"text":"algorithm that keeps related changes together (eg editing a word).","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Guarantees uniqueness of identifiers after merge, but does not"},{"text":" ","type":"text"},{"text":"enforce uniqueness of identifiers through updates made directly to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"property."}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayMerge":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"arrayMerge","kind":"identifier"}],"abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable."},{"type":"text","text":" "},{"text":"When there is a conflict, it will","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"type":"text","text":" "},{"type":"text","text":"algorithm that keeps related changes together (eg editing a word)."},{"type":"text","text":" "},{"type":"text","text":"Does not guarantee uniqueness of elements after merge:"},{"type":"text","text":" "},{"type":"text","text":"there can be duplicates created, so it is more suitable to value types"},{"text":" ","type":"text"},{"type":"text","text":"like characters in a string. than it is to identifiable types."}],"kind":"symbol","title":"PropertyMerge.arrayMerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","type":"topic","url":"\/documentation\/forkedmerge\/propertymerge\/arraymerge","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/mergeableProtocol":{"title":"PropertyMerge.mergeableProtocol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","type":"topic","kind":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/mergeableprotocol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"mergeableProtocol","kind":"identifier"}],"role":"symbol","abstract":[{"text":"The property must be a ","type":"text"},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":" type, and will be merged accordingly"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"text":" protocol.","type":"text"},{"text":" ","type":"text"},{"text":"This is the default algorithm if ","type":"text"},{"type":"codeVoice","code":"@Merged"},{"type":"text","text":" has been applied with no"},{"text":" ","type":"text"},{"type":"text","text":"algorithm stated."}]},"doc://ForkedMerge/documentation/ForkedMerge":{"url":"\/documentation\/forkedmerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","title":"ForkedMerge","kind":"symbol","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/RawRepresentable-Implementations":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations","type":"topic","abstract":[],"url":"\/documentation\/forkedmerge\/propertymerge\/rawrepresentable-implementations","title":"RawRepresentable Implementations","role":"collectionGroup","kind":"article"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/textMerge":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"textMerge","kind":"identifier"}],"type":"topic","url":"\/documentation\/forkedmerge\/propertymerge\/textmerge","title":"PropertyMerge.textMerge","abstract":[{"text":"Applies the ","type":"text"},{"code":"array","type":"codeVoice"},{"text":" merge algorithm to the characters in a string.","type":"text"},{"type":"text","text":" "},{"text":"This is suitable for any type of shared text, which may","type":"text"},{"type":"text","text":" "},{"text":"have conflicting edits, like a collaborative editor.","type":"text"},{"text":" ","type":"text"},{"text":"The variable must be a ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/init(rawValue:)":{"kind":"symbol","abstract":[],"title":"init(rawValue:)","url":"\/documentation\/forkedmerge\/propertymerge\/init(rawvalue:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)","role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":")","kind":"text"}]},"doc://ForkedMerge/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/ForkedMerge\/SH"},"doc://ForkedMerge/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/ForkedMerge\/SQ"}}}