{"kind":"symbol","variants":[{"paths":["\/documentation\/forkedmerge\/arrayofidentifiablemerger\/merge(_:withsubordinate:commonancestor:)-1pmm2"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"Element"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"modules":[{"name":"ForkedMerge"}],"extendedModule":"ForkedMerge","title":"merge(_:withSubordinate:commonAncestor:)","symbolKind":"method","externalID":"s:11ForkedMerge25ArrayOfIdentifiableMergerVAA0A09MergeableRzrlE5merge_15withSubordinate14commonAncestorSayxGAI_A2ItKF","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Identifiable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"This function merges two arrays of elements that are identifiable and mergeable."},{"text":" ","type":"text"},{"text":"The result is different to merging where the elements are not mergeable.","type":"text"},{"type":"text","text":" "},{"text":"This call will recurse the merge.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"merge","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"other"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]"}]}]}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger"]]},"sections":[],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-1pmm2","interfaceLanguage":"swift"},"references":{"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger":{"kind":"symbol","title":"ArrayOfIdentifiableMerger","abstract":[{"type":"text","text":"Merges an array, ensuring that the result has elements with unqiue identifiers."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger","navigatorTitle":[{"text":"ArrayOfIdentifiableMerger","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger/merge(_:withSubordinate:commonAncestor:)-1pmm2":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"merge","kind":"identifier"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"Element"},{"text":"], ","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Element"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"commonAncestor"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]) "},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","role":"symbol","abstract":[{"type":"text","text":"This function merges two arrays of elements that are identifiable and mergeable."},{"type":"text","text":" "},{"type":"text","text":"The result is different to merging where the elements are not mergeable."},{"type":"text","text":" "},{"type":"text","text":"This call will recurse the merge."}],"title":"merge(_:withSubordinate:commonAncestor:)","url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger\/merge(_:withsubordinate:commonancestor:)-1pmm2","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-1pmm2","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge":{"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge","title":"ForkedMerge","role":"collection","type":"topic","abstract":[{"text":"Handles merging of forked data structures.","type":"text"}]}}}