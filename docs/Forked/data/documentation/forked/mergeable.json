{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Mergeable","kind":"identifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Equatable","preciseIdentifier":"s:SQ"}],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/Mergeable","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Any type conforming to this can be used in a 3-way merge"}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/mergeable"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/GettingStarted","doc:\/\/Forked\/documentation\/Forked\/ForkedResource","doc:\/\/Forked\/documentation\/Forked\/Repository"],"title":"Essentials","generated":true,"anchor":"Essentials"}],"sections":[],"topicSections":[{"anchor":"Instance-Methods","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Mergeable\/merged(withSubordinate:commonAncestor:)","doc:\/\/Forked\/documentation\/Forked\/Mergeable\/salvaging(from:)-9fs2y"],"title":"Instance Methods","generated":true}],"metadata":{"symbolKind":"protocol","role":"symbol","roleHeading":"Protocol","title":"Mergeable","navigatorTitle":[{"text":"Mergeable","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Mergeable","kind":"identifier"}],"externalID":"s:6Forked9MergeableP","modules":[{"name":"Forked"}]},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked"]]},"relationshipsSections":[{"identifiers":["doc:\/\/Forked\/SQ"],"type":"inheritsFrom","title":"Inherits From","kind":"relationships"},{"title":"Conforming Types","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional"],"type":"conformingTypes","kind":"relationships"}],"references":{"doc://Forked/documentation/Forked/Mergeable/merged(withSubordinate:commonAncestor:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"merged"},{"text":"(","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"commonAncestor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/Mergeable\/merged(withSubordinate:commonAncestor:)","type":"topic","abstract":[{"text":"Performs a 3-way merge, where ","type":"text"},{"type":"codeVoice","code":"self"},{"type":"text","text":" and "},{"type":"codeVoice","code":"other"},{"type":"text","text":" are the most recent versions,"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"code":"commonAncestor","type":"codeVoice"},{"type":"text","text":" is from a point in the past at which time the histories diverged."},{"text":" ","type":"text"},{"text":"By comparing the recent values to the ancestor, you can determine what changed in each fork,","type":"text"},{"text":" ","type":"text"},{"text":"and decide how to merge. Where it is not possible to merge changes from each, ","type":"text"},{"code":"self","type":"codeVoice"},{"type":"text","text":" should"},{"type":"text","text":" "},{"text":"be considered the ","type":"text"},{"code":"dominant","type":"codeVoice"},{"text":" fork, and ","type":"text"},{"code":"other","type":"codeVoice"},{"type":"text","text":" subordinate. If you must choose, choose "},{"code":"self","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","title":"merged(withSubordinate:commonAncestor:)","role":"symbol","required":true,"url":"\/documentation\/forked\/mergeable\/merged(withsubordinate:commonancestor:)"},"doc://Forked/documentation/Forked/Repository":{"url":"\/documentation\/forked\/repository","identifier":"doc:\/\/Forked\/documentation\/Forked\/Repository","navigatorTitle":[{"kind":"identifier","text":"Repository"}],"type":"topic","kind":"symbol","title":"Repository","abstract":[{"type":"text","text":"This is storage for the "},{"type":"codeVoice","code":"ForkedResource"},{"text":". It could","type":"text"},{"type":"text","text":" "},{"text":"be persisted on disk, or just kept in memory.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This type does not understand any of the mechanisms of forking"},{"text":" ","type":"text"},{"text":"and merging. That is all handled by the ","type":"text"},{"code":"ForkedResource","type":"codeVoice"},{"text":", which also","type":"text"},{"text":" ","type":"text"},{"text":"ensures correct multi-threading behavior.","type":"text"},{"type":"text","text":" "},{"text":"Classes conforming to this type simply have to setup a storage","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"mechanism, and handle the requests, keeping commits assigned to forks."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Repository"}],"role":"symbol"},"doc://Forked/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/Forked\/SQ"},"doc://Forked/documentation/Forked/ForkedResource":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","type":"topic","title":"ForkedResource","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ForkedResource"}],"url":"\/documentation\/forked\/forkedresource","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ForkedResource","kind":"identifier"}],"abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}],"kind":"symbol"},"doc://Forked/documentation/Forked":{"title":"Forked","type":"topic","kind":"symbol","url":"\/documentation\/forked","abstract":[{"type":"text","text":"A framework for handling shared data with confidence in Swift."}],"role":"collection","identifier":"doc:\/\/Forked\/documentation\/Forked"},"doc://Forked/documentation/Forked/Swift/Optional":{"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optional","preciseIdentifier":"s:Sq","kind":"identifier"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional","type":"topic","navigatorTitle":[{"text":"Optional","kind":"identifier"}],"kind":"symbol","abstract":[],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Mergeable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"Optional","role":"symbol","url":"\/documentation\/forked\/swift\/optional"},"doc://Forked/documentation/Forked/Mergeable":{"kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/Mergeable","abstract":[{"type":"text","text":"Any type conforming to this can be used in a 3-way merge"}],"type":"topic","navigatorTitle":[{"text":"Mergeable","kind":"identifier"}],"url":"\/documentation\/forked\/mergeable","title":"Mergeable","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Mergeable","kind":"identifier"}]},"doc://Forked/documentation/Forked/Mergeable/salvaging(from:)-9fs2y":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/Mergeable\/salvaging(from:)-9fs2y","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"salvaging","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"defaultImplementations":1,"required":true,"title":"salvaging(from:)","type":"topic","url":"\/documentation\/forked\/mergeable\/salvaging(from:)-9fs2y","abstract":[{"type":"text","text":"In general, 3-way merges are used in Forked. But when bootstrapping,"},{"text":" ","type":"text"},{"text":"there can be times when no common ancestor exists. Effectively we have","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to merge together unrelated values. For example, if you install an app on"},{"text":" ","type":"text"},{"text":"two offline devices, insert some data on each, and then take them online to","type":"text"},{"text":" ","type":"text"},{"text":"sync. In this scenario, there is no common ancestor,","type":"text"},{"type":"text","text":" "},{"text":"but it would be nice to keep the data entered on each device.","type":"text"},{"text":" ","type":"text"},{"text":"An even trickier case arises if two devices are fully synced up, but then the","type":"text"},{"type":"text","text":" "},{"text":"cloud data is reset. Effectively, the two data sets are now unrelated, and if you","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"start them syncing again, the history relating them is lost, and there is no common"},{"type":"text","text":" "},{"type":"text","text":"ancestor. You can choose one or the other, but just blindly merging the two will"},{"type":"text","text":" "},{"type":"text","text":"lead to duplications (how often have we seen that in apps like Contacts?)"}]},"doc://Forked/documentation/Forked/GettingStarted":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/GettingStarted","type":"topic","kind":"article","abstract":[{"type":"text","text":"Learn how to use Forked to manage shared data in your Swift applications."}],"title":"Getting Started with Forked","role":"article","url":"\/documentation\/forked\/gettingstarted"}}}