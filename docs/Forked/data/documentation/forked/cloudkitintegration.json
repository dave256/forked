{"sections":[],"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/CloudKitIntegration","interfaceLanguage":"swift"},"kind":"article","seeAlsoSections":[{"title":"Articles","generated":true,"anchor":"Articles","identifiers":["doc:\/\/Forked\/documentation\/Forked\/GettingStarted","doc:\/\/Forked\/documentation\/Forked\/ForkedInnards"]}],"abstract":[{"type":"text","text":"Learn how to use ForkedCloudKit to sync your data across devices."}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked"]]},"metadata":{"roleHeading":"Article","modules":[{"name":"Forked"}],"role":"article","title":"CloudKit Integration Guide"},"primaryContentSections":[{"content":[{"anchor":"Overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"ForkedCloudKit makes it easy to sync your Forked data between devices using Apple’s CloudKit framework. This guide will walk you through the basic setup and usage."}]},{"type":"heading","level":2,"anchor":"Getting-Started","text":"Getting Started"},{"type":"paragraph","inlineContent":[{"type":"text","text":"First, make sure you have the ForkedCloudKit subpackage added to your project dependencies."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then import ForkedCloudKit in your source files:"}]},{"syntax":"swift","code":["import Forked","import ForkedCloudKit"],"type":"codeListing"},{"text":"Basic Setup","level":2,"anchor":"Basic-Setup","type":"heading"},{"inlineContent":[{"type":"text","text":"The main class you’ll work with is "},{"type":"codeVoice","code":"CloudKitExchange"},{"type":"text","text":". Here’s how to set it up:"}],"type":"paragraph"},{"code":["\/\/ Create a ForkedResource for your data","let repo = try AtomicRepository(managedFileURL: fileURL)","let forkedResource = try ForkedResource(repository: repo)","","\/\/ Create CloudKitExchange instance","let cloudKitExchange = try CloudKitExchange(","    id: \"<Unique ID for the repo in CloudKit>\",","    forkedResource: forkedResource,","    unknownModelVersionHandler: { error in","        \/\/ Handle unknown model version by printing the error","        \/\/ In a real app, you might want to show a UI alert telling the user to update","        print(\"Error: \\(error)\")","    }",")"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"id"},{"type":"text","text":" parameter should be a unique string that identifies this resource in CloudKit."}],"type":"paragraph"},{"anchor":"How-It-Works","level":2,"type":"heading","text":"How It Works"},{"inlineContent":[{"type":"text","text":"CloudKitExchange automatically:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Monitors changes to your ForkedResource’s main fork"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Uploads changes to iCloud when detected","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Downloads changes from other devices","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Before merging any changes, it checks the model version of the remote data and the local data. If the model version from iCloud is one that is unknown in the local app, it calls the "},{"type":"codeVoice","code":"unknownModelVersionHandler"},{"type":"text","text":" closure, and stops syncing. The user should update their app to the latest version."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"If the model is known, it merges the remote changes into your local data on the main fork"}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"text":"All of this happens in the background without blocking your app’s UI.","type":"text"}]},{"text":"Model Versioning","level":2,"anchor":"Model-Versioning","type":"heading"},{"inlineContent":[{"type":"text","text":"ForkedCloudKit requires your model to conform to "},{"type":"codeVoice","code":"VersionedModel"},{"text":" to ensure safe syncing across different app versions. This is crucial because:","type":"text"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Different versions of your app may have different data models"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"When syncing, you need to ensure the app can understand the data it receives"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Older versions of your app should not try to merge data from newer, unknown model versions","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Here’s how to make your model versioned:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@ForkedModel(version: 1)","struct MyData {","    ...","}"]},{"inlineContent":[{"type":"text","text":"When you update your model in a new app version, increment the version by 1."}],"type":"paragraph"},{"inlineContent":[{"text":"If CloudKitExchange encounters data with an unknown version (higher than the version in the code):","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"It calls your ","type":"text"},{"type":"codeVoice","code":"unknownModelVersionHandler"},{"text":" closure","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Stops syncing to prevent data corruption","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The user should be prompted to update their app"}]}]}],"type":"orderedList"},{"anchor":"Example-Implementation","type":"heading","level":2,"text":"Example Implementation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here’s a complete example showing how to integrate CloudKit sync into a SwiftUI app:"}]},{"syntax":"swift","code":["@Observable","@MainActor","class Store {","    private let repo: AtomicRepository<MyData>","    private let forkedResource: ForkedResource<AtomicRepository<MyData>>","    private var cloudKitExchange: CloudKitExchange<AtomicRepository<MyData>>!","","    \/\/\/ Set to true when the user needs to upgrade their model","    public var showUpgradeAlert = false","    ","    init() throws {","        \/\/ Setup local storage","        let fileURL = \/\/ ... your file URL","        repo = try AtomicRepository(managedFileURL: fileURL)","        forkedResource = try ForkedResource(repository: repo)","        ","        \/\/ Initialize CloudKit sync","        cloudKitExchange = try CloudKitExchange(","            id: \"<Unique ID for the repo in CloudKit>\",","            forkedResource: forkedResource,","            unknownModelVersionHandler: { [weak self]error in","                self?.showUpgradeAlert = true","            }","        )","    }","}"],"type":"codeListing"},{"anchor":"CloudKit-Setup-in-Xcode","text":"CloudKit Setup in Xcode","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Before your app can use CloudKit:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Enable iCloud in your Xcode target’s capabilities tab"}]}]},{"content":[{"inlineContent":[{"text":"Choose or add a container (","type":"text"},{"type":"emphasis","inlineContent":[{"text":"eg","type":"text"}]},{"text":" “iCloud.com.mycompany.myapp”). The container ID should match the ","type":"text"},{"code":"id","type":"codeVoice"},{"type":"text","text":" parameter in your "},{"code":"CloudKitExchange","type":"codeVoice"},{"type":"text","text":" initializer."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Also enable the background modes for remote notifications and background processing","type":"text"}],"type":"paragraph"}]}]},{"anchor":"Advanced-Usage","type":"heading","level":2,"text":"Advanced Usage"},{"level":3,"text":"Custom Container","type":"heading","anchor":"Custom-Container"},{"type":"paragraph","inlineContent":[{"text":"By default, CloudKitExchange uses the default CloudKit container. You can specify a custom container:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let container = CKContainer(identifier: \"iCloud.com.mycompany.myapp-another-container\")","let cloudKitExchange = try CloudKitExchange(","    id: \"<Unique ID for the repo in CloudKit>\",","    forkedResource: forkedResource,","    cloudKitContainer: container,","    unknownModelVersionHandler: { error in","        print(\"Error: \\(error)\")","    }",")"]},{"type":"heading","anchor":"Monitoring-Sync-Updates","text":"Monitoring Sync Updates","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"CloudKitExchange automatically handles sync in the background, but you can monitor when changes from CloudKit are merged into your main fork."}]},{"type":"paragraph","inlineContent":[{"text":"To do this, add a ","type":"text"},{"type":"codeVoice","code":"Task"},{"text":" on launch that monitors the ","type":"text"},{"code":"changeStream","type":"codeVoice"},{"type":"text","text":" for changes from CloudKit:"}]},{"type":"codeListing","code":["Task {","    for await change in forkedResource.changeStream ","        where change.fork == .main && change.mergingFork == .cloudKit {","        \/\/ Handle changes merged from CloudKit into main fork","    }","}"],"syntax":"swift"},{"anchor":"Troubleshooting","level":2,"type":"heading","text":"Troubleshooting"},{"type":"paragraph","inlineContent":[{"text":"Common issues and solutions:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"No Sync"}]},{"text":": Ensure iCloud is enabled on the device, the user is signed in, and iCloud Drive enabled","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Data Not Appearing"}],"type":"strong"},{"text":": Check that your CloudKit container is properly configured.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"No Sync in Production Version"}]},{"type":"text","text":": Make sure you push your CloudKit schema to production before launching your app. Use the CloudKit web portal (https:\/\/icloud.developer.apple.com) to do this"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Conflicts"}],"type":"strong"},{"type":"text","text":": ForkedCloudKit automatically handles conflicts using your resource’s merge strategy"}],"type":"paragraph"}]}]},{"type":"heading","text":"Further Reading","level":2,"anchor":"Further-Reading"},{"items":[{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/cloudkit"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"https:\/\/github.com\/drewmccormack\/Forked","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Sample App: ","type":"text"},{"identifier":"https:\/\/github.com\/drewmccormack\/Forked\/tree\/main\/Samples\/Forking%20Simple%20iCloud","isActive":true,"type":"reference"}]}]}],"type":"unorderedList"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/cloudkitintegration"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Forked/documentation/Forked/GettingStarted":{"type":"topic","abstract":[{"text":"Learn how to use Forked to manage shared data in your Swift applications.","type":"text"}],"title":"Getting Started with Forked","kind":"article","identifier":"doc:\/\/Forked\/documentation\/Forked\/GettingStarted","role":"article","url":"\/documentation\/forked\/gettingstarted"},"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","identifier":"doc:\/\/Forked\/documentation\/Forked","kind":"symbol","type":"topic","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"title":"Forked","role":"collection"},"https://github.com/drewmccormack/Forked/tree/main/Samples/Forking%20Simple%20iCloud":{"url":"https:\/\/github.com\/drewmccormack\/Forked\/tree\/main\/Samples\/Forking%20Simple%20iCloud","titleInlineContent":[{"type":"text","text":"Forking Simple iCloud"}],"title":"Forking Simple iCloud","type":"link","identifier":"https:\/\/github.com\/drewmccormack\/Forked\/tree\/main\/Samples\/Forking%20Simple%20iCloud"},"doc://Forked/documentation/Forked/ForkedInnards":{"kind":"article","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedInnards","role":"article","type":"topic","abstract":[{"type":"text","text":"Forked is built around a simple yet powerful concept: data conflicts should be treated as a natural part of software systems rather than an exceptional state."}],"url":"\/documentation\/forked\/forkedinnards","title":"Forked Innards: Understanding the Architecture"},"https://developer.apple.com/documentation/cloudkit":{"url":"https:\/\/developer.apple.com\/documentation\/cloudkit","titleInlineContent":[{"type":"text","text":"CloudKit Documentation"}],"type":"link","title":"CloudKit Documentation","identifier":"https:\/\/developer.apple.com\/documentation\/cloudkit"},"https://github.com/drewmccormack/Forked":{"url":"https:\/\/github.com\/drewmccormack\/Forked","titleInlineContent":[{"type":"text","text":"Forked Documentation"}],"title":"Forked Documentation","type":"link","identifier":"https:\/\/github.com\/drewmccormack\/Forked"}}}