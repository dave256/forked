{"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/VersionedModel\/currentModelVersion","interfaceLanguage":"swift"},"metadata":{"role":"symbol","modules":[{"name":"Forked"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"currentModelVersion","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"title":"currentModelVersion","symbolKind":"property","required":true,"roleHeading":"Type Property","externalID":"s:6Forked14VersionedModelP07currentC7VersionSivpZ"},"kind":"symbol","variants":[{"paths":["\/documentation\/forked\/versionedmodel\/currentmodelversion"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/VersionedModel"]]},"abstract":[{"text":"The current version of the model for this resource (struct).","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"It is generally best to start the current version at 0, and increase it by"},{"type":"text","text":" "},{"text":"one whenever a change is made to the properties of a struct.","type":"text"},{"type":"text","text":" "},{"text":"If you have not being using ","type":"text"},{"type":"codeVoice","code":"VersionedModel"},{"type":"text","text":", and add"},{"type":"text","text":" "},{"type":"text","text":"sync, you would use "},{"type":"codeVoice","code":"0"},{"type":"text","text":" if your model is unchanged, and "},{"code":"1","type":"codeVoice"},{"text":" if","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"it changed from the un-synced version. The old un-synced model"},{"text":" ","type":"text"},{"type":"text","text":"will get a "},{"code":"modelVersion","type":"codeVoice"},{"type":"text","text":" of "},{"code":"nil","type":"codeVoice"},{"type":"text","text":", which is treated as "},{"type":"codeVoice","code":"0"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Using "},{"code":"1","type":"codeVoice"},{"text":" will cause ","type":"text"},{"type":"codeVoice","code":"Forked"},{"text":" to avoid merging the newer model","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"into the old one."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"currentModelVersion"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"references":{"doc://Forked/documentation/Forked/VersionedModel/currentModelVersion":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/VersionedModel\/currentModelVersion","required":true,"type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"currentModelVersion"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"abstract":[{"text":"The current version of the model for this resource (struct).","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"It is generally best to start the current version at 0, and increase it by"},{"text":" ","type":"text"},{"type":"text","text":"one whenever a change is made to the properties of a struct."},{"type":"text","text":" "},{"type":"text","text":"If you have not being using "},{"code":"VersionedModel","type":"codeVoice"},{"text":", and add","type":"text"},{"type":"text","text":" "},{"text":"sync, you would use ","type":"text"},{"code":"0","type":"codeVoice"},{"text":" if your model is unchanged, and ","type":"text"},{"type":"codeVoice","code":"1"},{"type":"text","text":" if"},{"type":"text","text":" "},{"text":"it changed from the un-synced version. The old un-synced model","type":"text"},{"type":"text","text":" "},{"text":"will get a ","type":"text"},{"code":"modelVersion","type":"codeVoice"},{"text":" of ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":", which is treated as "},{"type":"codeVoice","code":"0"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Using "},{"code":"1","type":"codeVoice"},{"type":"text","text":" will cause "},{"type":"codeVoice","code":"Forked"},{"text":" to avoid merging the newer model","type":"text"},{"text":" ","type":"text"},{"text":"into the old one.","type":"text"}],"title":"currentModelVersion","url":"\/documentation\/forked\/versionedmodel\/currentmodelversion","kind":"symbol"},"doc://Forked/documentation/Forked/VersionedModel":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"VersionedModel","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol to track the model version of a "},{"type":"codeVoice","code":"ForkedResource"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"This isn’t very important on a single device, but if syncing between"},{"type":"text","text":" "},{"type":"text","text":"devices, it is important that a device that doesn’t yet have the"},{"text":" ","type":"text"},{"type":"text","text":"latest version does not try to import data from that version."},{"type":"text","text":" "},{"text":"If it does, it won’t know how to handle it, and may lose data.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"VersionedModel","kind":"identifier"}],"url":"\/documentation\/forked\/versionedmodel","title":"VersionedModel","identifier":"doc:\/\/Forked\/documentation\/Forked\/VersionedModel"},"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","identifier":"doc:\/\/Forked\/documentation\/Forked","kind":"symbol","type":"topic","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"title":"Forked","role":"collection"}}}