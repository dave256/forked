{"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"abstract":[{"text":"If you want to perform a series of calls as a single transaction,","type":"text"},{"type":"text","text":" "},{"text":"preventing other threads from changing anything between calls,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"use this to group the transaction of calls. Note that reentrance of this"},{"type":"text","text":" "},{"type":"text","text":"method from the same thread will lead to deadlock. It is best not to"},{"type":"text","text":" "},{"type":"text","text":"execute long running code in the block, because all other interactions"},{"text":" ","type":"text"},{"type":"text","text":"with the "},{"code":"ForkedResource","type":"codeVoice"},{"type":"text","text":" will block waiting."}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/forkedresource\/performatomically(_:)"]}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"performAtomically"},{"kind":"text","text":"<"},{"text":"ReturnType","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"ReturnType","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"ReturnType","kind":"typeIdentifier"}],"externalID":"s:6Forked0A8ResourceC17performAtomicallyyqd__qd__yKXEKlF","roleHeading":"Instance Method","extendedModule":"Forked","modules":[{"name":"Forked"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Repository"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RepositoryType.Resource"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","title":"performAtomically(_:)","symbolKind":"method"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"performAtomically"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ReturnType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"block","kind":"internalParam"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"ReturnType","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ReturnType"}]}]}],"references":{"doc://Forked/documentation/Forked/ForkedResource":{"abstract":[{"type":"text","text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and"},{"type":"text","text":" "},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}],"type":"topic","role":"symbol","title":"ForkedResource","navigatorTitle":[{"text":"ForkedResource","kind":"identifier"}],"url":"\/documentation\/forked\/forkedresource","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ForkedResource","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource"},"doc://Forked/documentation/Forked/ForkedResource/performAtomically(_:)":{"url":"\/documentation\/forked\/forkedresource\/performatomically(_:)","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Repository"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"performAtomically"},{"text":"<","kind":"text"},{"text":"ReturnType","kind":"genericParameter"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"ReturnType","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ReturnType"}],"type":"topic","abstract":[{"type":"text","text":"If you want to perform a series of calls as a single transaction,"},{"type":"text","text":" "},{"type":"text","text":"preventing other threads from changing anything between calls,"},{"type":"text","text":" "},{"type":"text","text":"use this to group the transaction of calls. Note that reentrance of this"},{"type":"text","text":" "},{"type":"text","text":"method from the same thread will lead to deadlock. It is best not to"},{"text":" ","type":"text"},{"text":"execute long running code in the block, because all other interactions","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with the "},{"type":"codeVoice","code":"ForkedResource"},{"type":"text","text":" will block waiting."}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","title":"performAtomically(_:)"},"doc://Forked/documentation/Forked":{"title":"Forked","type":"topic","kind":"symbol","url":"\/documentation\/forked","abstract":[{"type":"text","text":"A framework for handling shared data with confidence in Swift."}],"role":"collection","identifier":"doc:\/\/Forked\/documentation\/Forked"}}}