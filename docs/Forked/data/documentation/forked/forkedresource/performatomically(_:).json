{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)"},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"sections":[],"metadata":{"symbolKind":"method","extendedModule":"Forked","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Repository","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"performAtomically"},{"kind":"text","text":"<"},{"text":"ReturnType","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ReturnType"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"ReturnType","kind":"typeIdentifier"}],"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"Forked"}],"externalID":"s:6Forked0A8ResourceC17performAtomicallyyqd__qd__yKXEKlF","title":"performAtomically(_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"performAtomically","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ReturnType","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"block"},{"kind":"text","text":": () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ReturnType"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"ReturnType","kind":"typeIdentifier"}]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","variants":[{"paths":["\/documentation\/forked\/forkedresource\/performatomically(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"If you want to perform a series of calls as a single transaction,"},{"text":" ","type":"text"},{"text":"preventing other threads from changing anything between calls,","type":"text"},{"type":"text","text":" "},{"text":"use this to group the transaction of calls. Note that reentrance of this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"method from the same thread will lead to deadlock. It is best not to"},{"type":"text","text":" "},{"type":"text","text":"execute long running code in the block, because all other interactions"},{"text":" ","type":"text"},{"text":"with the ","type":"text"},{"type":"codeVoice","code":"ForkedResource"},{"text":" will block waiting.","type":"text"}],"references":{"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","identifier":"doc:\/\/Forked\/documentation\/Forked","kind":"symbol","type":"topic","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"title":"Forked","role":"collection"},"doc://Forked/documentation/Forked/ForkedResource/performAtomically(_:)":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","url":"\/documentation\/forked\/forkedresource\/performatomically(_:)","role":"symbol","title":"performAtomically(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"performAtomically","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ReturnType","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ReturnType"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ReturnType"}],"conformance":{"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Repository"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","kind":"symbol","abstract":[{"text":"If you want to perform a series of calls as a single transaction,","type":"text"},{"type":"text","text":" "},{"text":"preventing other threads from changing anything between calls,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"use this to group the transaction of calls. Note that reentrance of this"},{"type":"text","text":" "},{"type":"text","text":"method from the same thread will lead to deadlock. It is best not to"},{"type":"text","text":" "},{"text":"execute long running code in the block, because all other interactions","type":"text"},{"type":"text","text":" "},{"text":"with the ","type":"text"},{"type":"codeVoice","code":"ForkedResource"},{"type":"text","text":" will block waiting."}]},"doc://Forked/documentation/Forked/ForkedResource":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","type":"topic","navigatorTitle":[{"text":"ForkedResource","kind":"identifier"}],"abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"text":" ","type":"text"},{"text":"provides a systematic approach for merging changes, with support for 3-way merging.","type":"text"}],"url":"\/documentation\/forked\/forkedresource","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForkedResource","kind":"identifier"}],"title":"ForkedResource"}}}