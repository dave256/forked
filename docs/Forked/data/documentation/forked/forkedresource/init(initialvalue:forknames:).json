{"variants":[{"paths":["\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)"},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"metadata":{"modules":[{"name":"Forked"}],"symbolKind":"init","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"?, "},{"text":"forkNames","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"])"}],"title":"init(initialValue:forkNames:)","externalID":"s:6Forked0A8ResourceC12initialValue9forkNamesACyAA16AtomicRepositoryCyqd__GGqd__Sg_SaySSGtcAHRszSQRd__s8SendableRd__lufc","role":"symbol","roleHeading":"Initializer","conformance":{"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Repository","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RepositoryType.Resource"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"extendedModule":"Forked"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"forkNames"},{"text":": [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"] = []) ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"RepositoryType"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicRepository","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","preciseIdentifier":"s:6Forked16AtomicRepositoryC"},{"kind":"text","text":"<"},{"text":"R","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SQ","kind":"typeIdentifier","text":"Equatable"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}]}],"kind":"declarations"}],"abstract":[{"text":"Convenience for creating simple forked resource for in-memory use.","type":"text"},{"text":" ","type":"text"},{"text":"Create an in-memory ForkedResource with the given fork names, and initial value.","type":"text"},{"text":" ","type":"text"},{"text":"The setup ensures that all forks are synced up with the initial value — if there is one —","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,"},{"type":"text","text":" "},{"type":"text","text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)"}],"sections":[],"references":{"doc://Forked/documentation/Forked/ForkedResource":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ForkedResource"}],"title":"ForkedResource","abstract":[{"type":"text","text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and"},{"type":"text","text":" "},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}],"kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","type":"topic","url":"\/documentation\/forked\/forkedresource","navigatorTitle":[{"text":"ForkedResource","kind":"identifier"}]},"doc://Forked/documentation/Forked/ForkedResource/init(initialValue:forkNames:)":{"abstract":[{"text":"Convenience for creating simple forked resource for in-memory use.","type":"text"},{"type":"text","text":" "},{"text":"Create an in-memory ForkedResource with the given fork names, and initial value.","type":"text"},{"type":"text","text":" "},{"text":"The setup ensures that all forks are synced up with the initial value — if there is one —","type":"text"},{"type":"text","text":" "},{"type":"text","text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,"},{"text":" ","type":"text"},{"type":"text","text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)"}],"url":"\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"forkNames","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"])"}],"conformance":{"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Repository"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RepositoryType.Resource"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)","title":"init(initialValue:forkNames:)"},"doc://Forked/documentation/Forked":{"identifier":"doc:\/\/Forked\/documentation\/Forked","title":"Forked","type":"topic","role":"collection","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"url":"\/documentation\/forked","kind":"symbol"},"doc://Forked/documentation/Forked/AtomicRepository":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"An atomic repository is one that gets loaded completely into memory.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If the "},{"code":"Resource","type":"codeVoice"},{"text":" it contains conforms to ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":", the ","type":"text"},{"code":"AtomicRepository","type":"codeVoice"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"text":"also ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":", and can be converted to a serialized form and saved as a file."},{"text":" ","type":"text"},{"type":"text","text":"Saving and loading are atomic, that is, the whole repository is loaded from file, and the whole"},{"text":" ","type":"text"},{"type":"text","text":"file is written to disk."}],"navigatorTitle":[{"text":"AtomicRepository","kind":"identifier"}],"title":"AtomicRepository","url":"\/documentation\/forked\/atomicrepository","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicRepository"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository"}}}