{"sections":[],"abstract":[{"text":"Convenience for creating simple forked resource for in-memory use.","type":"text"},{"type":"text","text":" "},{"text":"Create an in-memory ForkedResource with the given fork names, and initial value.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The setup ensures that all forks are synced up with the initial value — if there is one —"},{"type":"text","text":" "},{"text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,","type":"text"},{"type":"text","text":" "},{"text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"kind":"keyword","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"initialValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"? = nil, "},{"text":"forkNames","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":"] = []) ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RepositoryType","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"AtomicRepository","kind":"typeIdentifier","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","preciseIdentifier":"s:6Forked16AtomicRepositoryC"},{"kind":"text","text":"<"},{"text":"R","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Equatable","preciseIdentifier":"s:SQ"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":" : "},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)"]}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"type":"text","text":" conforms to "},{"code":"Repository","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RepositoryType.Resource"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"forkNames"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"])"}],"symbolKind":"init","title":"init(initialValue:forkNames:)","roleHeading":"Initializer","externalID":"s:6Forked0A8ResourceC12initialValue9forkNamesACyAA16AtomicRepositoryCyqd__GGqd__Sg_SaySSGtcAHRszSQRd__s8SendableRd__lufc","modules":[{"name":"Forked"}],"extendedModule":"Forked","role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)"},"references":{"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","identifier":"doc:\/\/Forked\/documentation\/Forked","kind":"symbol","type":"topic","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"title":"Forked","role":"collection"},"doc://Forked/documentation/Forked/ForkedResource":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","type":"topic","navigatorTitle":[{"text":"ForkedResource","kind":"identifier"}],"abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"text":" ","type":"text"},{"text":"provides a systematic approach for merging changes, with support for 3-way merging.","type":"text"}],"url":"\/documentation\/forked\/forkedresource","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForkedResource","kind":"identifier"}],"title":"ForkedResource"},"doc://Forked/documentation/Forked/AtomicRepository":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","role":"symbol","navigatorTitle":[{"text":"AtomicRepository","kind":"identifier"}],"type":"topic","title":"AtomicRepository","url":"\/documentation\/forked\/atomicrepository","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicRepository"}],"kind":"symbol","abstract":[{"type":"text","text":"An atomic repository is one that gets loaded completely into memory."},{"type":"text","text":" "},{"text":"If the ","type":"text"},{"type":"codeVoice","code":"Resource"},{"type":"text","text":" it contains conforms to "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":", the "},{"type":"codeVoice","code":"AtomicRepository"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"also "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":", and can be converted to a serialized form and saved as a file."},{"text":" ","type":"text"},{"text":"Saving and loading are atomic, that is, the whole repository is loaded from file, and the whole","type":"text"},{"type":"text","text":" "},{"text":"file is written to disk.","type":"text"}]},"doc://Forked/documentation/Forked/ForkedResource/init(initialValue:forkNames:)":{"url":"\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"forkNames"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"])"}],"abstract":[{"text":"Convenience for creating simple forked resource for in-memory use.","type":"text"},{"text":" ","type":"text"},{"text":"Create an in-memory ForkedResource with the given fork names, and initial value.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The setup ensures that all forks are synced up with the initial value — if there is one —"},{"text":" ","type":"text"},{"type":"text","text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,"},{"type":"text","text":" "},{"text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)","type":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Repository"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)","title":"init(initialValue:forkNames:)","type":"topic","kind":"symbol","role":"symbol"}}}