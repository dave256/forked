{"metadata":{"externalID":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:6Forked7VersionV","role":"symbol","extendedModule":"Swift","symbolKind":"op","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..."},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s19PartialRangeThroughV","kind":"typeIdentifier","text":"PartialRangeThrough"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"roleHeading":"Operator","modules":[{"relatedModules":["Swift"],"name":"Forked"}],"title":"...(_:)"},"kind":"symbol","variants":[{"paths":["\/documentation\/forked\/version\/'...(_:)-1nziq"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Returns a partial range up to, and including, its upper bound."}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/Version","doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:)-1nziq"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"maximum"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"PartialRangeThrough","preciseIdentifier":"s:s19PartialRangeThroughV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"maximum","content":[{"inlineContent":[{"text":"The upper bound for the range.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"Use the prefix closed range operator (prefix "},{"code":"...","type":"codeVoice"},{"text":") to create a partial","type":"text"},{"text":" ","type":"text"},{"text":"range of any type that conforms to the ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":" protocol. This","type":"text"},{"text":" ","type":"text"},{"text":"example creates a ","type":"text"},{"code":"PartialRangeThrough<Double>","type":"codeVoice"},{"type":"text","text":" instance that includes"},{"text":" ","type":"text"},{"type":"text","text":"any value less than or equal to "},{"type":"codeVoice","code":"5.0"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let throughFive = ...5.0","","throughFive.contains(4.0)     \/\/ true","throughFive.contains(5.0)     \/\/ true","throughFive.contains(6.0)     \/\/ false"],"syntax":null},{"inlineContent":[{"text":"You can use this type of partial range of a collection’s indices to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"represent the range from the start of the collection up to, and"},{"type":"text","text":" "},{"type":"text","text":"including, the partial range’s upper bound."}],"type":"paragraph"},{"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[...3])","\/\/ Prints \"[10, 20, 30, 40]\""],"type":"codeListing","syntax":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"maximum","type":"codeVoice"},{"type":"text","text":" must compare equal to itself (i.e. cannot be NaN)."}]}],"name":"Precondition","type":"aside","style":"note"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"references":{"doc://Forked/documentation/Forked/Version":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Version"}],"title":"Version","abstract":[{"type":"text","text":"Used to chronologically order file versions. It is a standard lamport count."}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/Version","type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/forked\/version","navigatorTitle":[{"kind":"identifier","text":"Version"}]},"doc://Forked/documentation/Forked/Version/...(_:)-1nziq":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:)-1nziq","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s19PartialRangeThroughV","kind":"typeIdentifier","text":"PartialRangeThrough"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/forked\/version\/'...(_:)-1nziq","title":"...(_:)","abstract":[{"type":"text","text":"Returns a partial range up to, and including, its upper bound."}]},"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","identifier":"doc:\/\/Forked\/documentation\/Forked","kind":"symbol","type":"topic","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"title":"Forked","role":"collection"},"doc://Forked/documentation/Forked/Version/Comparable-Implementations":{"title":"Comparable Implementations","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations","role":"collectionGroup","url":"\/documentation\/forked\/version\/comparable-implementations"}}}