{"sections":[],"metadata":{"externalID":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:6Forked7VersionV","title":"...(_:)","role":"symbol","symbolKind":"op","modules":[{"name":"Forked","relatedModules":["Swift"]}],"extendedModule":"Swift","roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..."},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"PartialRangeThrough","kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"kind":"symbol","identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:)-1nziq","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns a partial range up to, and including, its upper bound."}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/Version","doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/version\/'...(_:)-1nziq"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..."},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"internalParam","text":"maximum"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s19PartialRangeThroughV","text":"PartialRangeThrough","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]}]},{"parameters":[{"name":"maximum","content":[{"type":"paragraph","inlineContent":[{"text":"The upper bound for the range.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Use the prefix closed range operator (prefix ","type":"text"},{"type":"codeVoice","code":"..."},{"type":"text","text":") to create a partial"},{"text":" ","type":"text"},{"type":"text","text":"range of any type that conforms to the "},{"type":"codeVoice","code":"Comparable"},{"text":" protocol. This","type":"text"},{"type":"text","text":" "},{"text":"example creates a ","type":"text"},{"type":"codeVoice","code":"PartialRangeThrough<Double>"},{"type":"text","text":" instance that includes"},{"type":"text","text":" "},{"text":"any value less than or equal to ","type":"text"},{"code":"5.0","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","code":["let throughFive = ...5.0","","throughFive.contains(4.0)     \/\/ true","throughFive.contains(5.0)     \/\/ true","throughFive.contains(6.0)     \/\/ false"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"You can use this type of partial range of a collection’s indices to","type":"text"},{"type":"text","text":" "},{"text":"represent the range from the start of the collection up to, and","type":"text"},{"text":" ","type":"text"},{"text":"including, the partial range’s upper bound.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[...3])","\/\/ Prints \"[10, 20, 30, 40]\""]},{"type":"aside","style":"note","name":"Precondition","content":[{"inlineContent":[{"type":"text","text":""},{"code":"maximum","type":"codeVoice"},{"text":" must compare equal to itself (i.e. cannot be NaN).","type":"text"}],"type":"paragraph"}]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://Forked/documentation/Forked/Version/Comparable-Implementations":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations","title":"Comparable Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/forked\/version\/comparable-implementations","type":"topic","kind":"article"},"doc://Forked/documentation/Forked/Version/...(_:)-1nziq":{"type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:)-1nziq","title":"...(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"PartialRangeThrough","kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"url":"\/documentation\/forked\/version\/'...(_:)-1nziq","abstract":[{"type":"text","text":"Returns a partial range up to, and including, its upper bound."}]},"doc://Forked/documentation/Forked":{"identifier":"doc:\/\/Forked\/documentation\/Forked","title":"Forked","type":"topic","role":"collection","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"url":"\/documentation\/forked","kind":"symbol"},"doc://Forked/documentation/Forked/Version":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/Version","title":"Version","type":"topic","role":"symbol","abstract":[{"text":"Used to chronologically order file versions. It is a standard lamport count.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Version"}],"url":"\/documentation\/forked\/version","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Version","kind":"identifier"}],"kind":"symbol"}}}