{"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked"]]},"abstract":[{"text":"Protocol to track the model version of a ","type":"text"},{"type":"codeVoice","code":"ForkedResource"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"This isn’t very important on a single device, but if syncing between","type":"text"},{"type":"text","text":" "},{"text":"devices, it is important that a device that doesn’t yet have the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"latest version does not try to import data from that version."},{"type":"text","text":" "},{"type":"text","text":"If it does, it won’t know how to handle it, and may lose data."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/versionedmodel"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"role":"symbol","roleHeading":"Protocol","symbolKind":"protocol","title":"VersionedModel","modules":[{"name":"Forked"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"VersionedModel"}],"externalID":"s:6Forked14VersionedModelP","navigatorTitle":[{"text":"VersionedModel","kind":"identifier"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VersionedModel","kind":"identifier"}]}],"kind":"declarations"}],"topicSections":[{"anchor":"Instance-Properties","identifiers":["doc:\/\/Forked\/documentation\/Forked\/VersionedModel\/canLoadModelVersion","doc:\/\/Forked\/documentation\/Forked\/VersionedModel\/modelVersion"],"title":"Instance Properties","generated":true},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/VersionedModel\/currentModelVersion"],"anchor":"Type-Properties","title":"Type Properties","generated":true}],"kind":"symbol","identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/VersionedModel","interfaceLanguage":"swift"},"references":{"doc://Forked/documentation/Forked":{"title":"Forked","type":"topic","kind":"symbol","url":"\/documentation\/forked","abstract":[{"type":"text","text":"A framework for handling shared data with confidence in Swift."}],"role":"collection","identifier":"doc:\/\/Forked\/documentation\/Forked"},"doc://Forked/documentation/Forked/VersionedModel/canLoadModelVersion":{"role":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/VersionedModel\/canLoadModelVersion","type":"topic","url":"\/documentation\/forked\/versionedmodel\/canloadmodelversion","abstract":[{"type":"text","text":"If the "},{"code":"version","type":"codeVoice"},{"type":"text","text":" is less or equal to the "},{"code":"currentVersion","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"it is considered to be known. Ie, it is a version from the past"},{"type":"text","text":" "},{"text":"or a current version, and we can handle this version. It can","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"be properly migrated."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"canLoadModelVersion"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","title":"canLoadModelVersion"},"doc://Forked/documentation/Forked/VersionedModel/modelVersion":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"modelVersion"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":"?","kind":"text"}],"url":"\/documentation\/forked\/versionedmodel\/modelversion","role":"symbol","kind":"symbol","title":"modelVersion","abstract":[{"type":"text","text":"When an object is created for the first time, or saved,"},{"type":"text","text":" "},{"text":"this version is set to the most recent version (","type":"text"},{"code":"currentModelVersion","type":"codeVoice"},{"text":").","type":"text"},{"text":" ","type":"text"},{"text":"When loading data from disk (eg with ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":") or over a network, this","type":"text"},{"type":"text","text":" "},{"text":"can be compared with ","type":"text"},{"type":"codeVoice","code":"currentModelVersion"},{"text":" to see if","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the model saved is a known version. If not, we should not"},{"type":"text","text":" "},{"text":"try to merge with it.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This is optional so that it is possible to add it to an existing"},{"type":"text","text":" "},{"type":"text","text":"model that was not versioned, and still use "},{"type":"codeVoice","code":"Codable"},{"text":" migration.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"A value of "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" is treated the same as "},{"code":"0","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/VersionedModel\/modelVersion","required":true},"doc://Forked/documentation/Forked/VersionedModel":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"VersionedModel"}],"url":"\/documentation\/forked\/versionedmodel","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/VersionedModel","abstract":[{"text":"Protocol to track the model version of a ","type":"text"},{"code":"ForkedResource","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"This isn’t very important on a single device, but if syncing between"},{"type":"text","text":" "},{"text":"devices, it is important that a device that doesn’t yet have the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"latest version does not try to import data from that version."},{"type":"text","text":" "},{"type":"text","text":"If it does, it won’t know how to handle it, and may lose data."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"VersionedModel","kind":"identifier"}],"kind":"symbol","title":"VersionedModel"},"doc://Forked/documentation/Forked/VersionedModel/currentModelVersion":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/VersionedModel\/currentModelVersion","kind":"symbol","required":true,"url":"\/documentation\/forked\/versionedmodel\/currentmodelversion","abstract":[{"type":"text","text":"The current version of the model for this resource (struct)."},{"text":" ","type":"text"},{"text":"It is generally best to start the current version at 0, and increase it by","type":"text"},{"type":"text","text":" "},{"type":"text","text":"one whenever a change is made to the properties of a struct."},{"type":"text","text":" "},{"type":"text","text":"If you have not being using "},{"code":"VersionedModel","type":"codeVoice"},{"type":"text","text":", and add"},{"type":"text","text":" "},{"text":"sync, you would use ","type":"text"},{"code":"0","type":"codeVoice"},{"text":" if your model is unchanged, and ","type":"text"},{"code":"1","type":"codeVoice"},{"type":"text","text":" if"},{"text":" ","type":"text"},{"text":"it changed from the un-synced version. The old un-synced model","type":"text"},{"type":"text","text":" "},{"text":"will get a ","type":"text"},{"type":"codeVoice","code":"modelVersion"},{"text":" of ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", which is treated as ","type":"text"},{"code":"0","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Using ","type":"text"},{"type":"codeVoice","code":"1"},{"type":"text","text":" will cause "},{"code":"Forked","type":"codeVoice"},{"type":"text","text":" to avoid merging the newer model"},{"text":" ","type":"text"},{"type":"text","text":"into the old one."}],"title":"currentModelVersion","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"currentModelVersion","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"type":"topic"}}}