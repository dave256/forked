{"defaultImplementationsSections":[{"title":"Mergeable Implementations","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Mergeable\/salvaging(from:)-3p5f"],"anchor":"Mergeable-Implementations"}],"metadata":{"externalID":"s:6Forked9MergeableP9salvaging4fromxx_tKF","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"salvaging","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"modules":[{"name":"Forked"}],"title":"salvaging(from:)","role":"symbol","required":true,"symbolKind":"method"},"abstract":[{"type":"text","text":"In general, 3-way merges are used in Forked. But when bootstrapping,"},{"text":" ","type":"text"},{"type":"text","text":"there can be times when no common ancestor exists. Effectively we have"},{"type":"text","text":" "},{"type":"text","text":"to merge together unrelated values. For example, if you install an app on"},{"type":"text","text":" "},{"text":"two offline devices, insert some data on each, and then take them online to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"sync. In this scenario, there is no common ancestor,"},{"text":" ","type":"text"},{"type":"text","text":"but it would be nice to keep the data entered on each device."},{"text":" ","type":"text"},{"text":"An even trickier case arises if two devices are fully synced up, but then the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"cloud data is reset. Effectively, the two data sets are now unrelated, and if you"},{"type":"text","text":" "},{"type":"text","text":"start them syncing again, the history relating them is lost, and there is no common"},{"text":" ","type":"text"},{"text":"ancestor. You can choose one or the other, but just blindly merging the two will","type":"text"},{"text":" ","type":"text"},{"text":"lead to duplications (how often have we seen that in apps like Contacts?)","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/forked\/mergeable\/salvaging(from:)-9fs2y"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/Mergeable"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"salvaging"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"That’s a lot of introduction, but it sets up this function. This function is effectively","type":"text"},{"type":"text","text":" "},{"text":"a 2-way merge. By default, it just returns ","type":"text"},{"type":"codeVoice","code":"self"},{"type":"text","text":", which is considered the dominant"},{"text":" ","type":"text"},{"type":"text","text":"copy of the data. But if you need special handling to bootstrap, you can “salvage”"},{"type":"text","text":" "},{"text":"data from ","type":"text"},{"type":"codeVoice","code":"other"},{"text":" and merge it in. It is even possible to setup a 3-way merge","type":"text"},{"text":" ","type":"text"},{"text":"where you construct an initial value and use that as the common ancestor, but","type":"text"},{"type":"text","text":" "},{"type":"text","text":"this may not work well for all properties. Often a combination of approaches is best"},{"type":"text","text":" "},{"type":"text","text":"for salvaging, eg, starting with a 3-way merge against the initial value, and then"},{"text":" ","type":"text"},{"text":"copying in properties from ","type":"text"},{"type":"codeVoice","code":"self"},{"text":" where this 3-way merge doesn’t do what you","type":"text"},{"type":"text","text":" "},{"text":"want.","type":"text"}]}],"kind":"content"}],"kind":"symbol","identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/Mergeable\/salvaging(from:)-9fs2y","interfaceLanguage":"swift"},"references":{"doc://Forked/documentation/Forked/Mergeable/salvaging(from:)-9fs2y":{"required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"salvaging","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"salvaging(from:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"In general, 3-way merges are used in Forked. But when bootstrapping,"},{"type":"text","text":" "},{"type":"text","text":"there can be times when no common ancestor exists. Effectively we have"},{"text":" ","type":"text"},{"text":"to merge together unrelated values. For example, if you install an app on","type":"text"},{"type":"text","text":" "},{"type":"text","text":"two offline devices, insert some data on each, and then take them online to"},{"type":"text","text":" "},{"type":"text","text":"sync. In this scenario, there is no common ancestor,"},{"text":" ","type":"text"},{"type":"text","text":"but it would be nice to keep the data entered on each device."},{"text":" ","type":"text"},{"text":"An even trickier case arises if two devices are fully synced up, but then the","type":"text"},{"type":"text","text":" "},{"text":"cloud data is reset. Effectively, the two data sets are now unrelated, and if you","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"start them syncing again, the history relating them is lost, and there is no common"},{"text":" ","type":"text"},{"type":"text","text":"ancestor. You can choose one or the other, but just blindly merging the two will"},{"type":"text","text":" "},{"type":"text","text":"lead to duplications (how often have we seen that in apps like Contacts?)"}],"defaultImplementations":1,"type":"topic","url":"\/documentation\/forked\/mergeable\/salvaging(from:)-9fs2y","identifier":"doc:\/\/Forked\/documentation\/Forked\/Mergeable\/salvaging(from:)-9fs2y"},"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","identifier":"doc:\/\/Forked\/documentation\/Forked","kind":"symbol","type":"topic","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"title":"Forked","role":"collection"},"doc://Forked/documentation/Forked/Mergeable":{"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/forked\/mergeable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Mergeable","kind":"identifier"}],"abstract":[{"type":"text","text":"Any type conforming to this can be used in a 3-way merge"}],"navigatorTitle":[{"kind":"identifier","text":"Mergeable"}],"title":"Mergeable","identifier":"doc:\/\/Forked\/documentation\/Forked\/Mergeable"},"doc://Forked/documentation/Forked/Mergeable/salvaging(from:)-3p5f":{"type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/Mergeable\/salvaging(from:)-3p5f","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"salvaging","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","kind":"symbol","url":"\/documentation\/forked\/mergeable\/salvaging(from:)-3p5f","title":"salvaging(from:)"}}}