{"metadata":{"symbolKind":"method","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"merged"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"commonAncestor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","externalID":"s:6Forked9MergeableP6merged15withSubordinate14commonAncestorxx_xtKF","title":"merged(withSubordinate:commonAncestor:)","roleHeading":"Instance Method","modules":[{"name":"Forked"}]},"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/Mergeable\/merged(withSubordinate:commonAncestor:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"merged"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/mergeable\/merged(withsubordinate:commonancestor:)"]}],"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Performs a 3-way merge, where "},{"code":"self","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"other","type":"codeVoice"},{"text":" are the most recent versions,","type":"text"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"commonAncestor","type":"codeVoice"},{"text":" is from a point in the past at which time the histories diverged.","type":"text"},{"type":"text","text":" "},{"text":"By comparing the recent values to the ancestor, you can determine what changed in each fork,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and decide how to merge. Where it is not possible to merge changes from each, "},{"type":"codeVoice","code":"self"},{"text":" should","type":"text"},{"type":"text","text":" "},{"text":"be considered the ","type":"text"},{"code":"dominant","type":"codeVoice"},{"type":"text","text":" fork, and "},{"type":"codeVoice","code":"other"},{"text":" subordinate. If you must choose, choose ","type":"text"},{"type":"codeVoice","code":"self"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/Mergeable"]]},"references":{"doc://Forked/documentation/Forked/Mergeable":{"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/forked\/mergeable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Mergeable","kind":"identifier"}],"abstract":[{"type":"text","text":"Any type conforming to this can be used in a 3-way merge"}],"navigatorTitle":[{"kind":"identifier","text":"Mergeable"}],"title":"Mergeable","identifier":"doc:\/\/Forked\/documentation\/Forked\/Mergeable"},"doc://Forked/documentation/Forked/Mergeable/merged(withSubordinate:commonAncestor:)":{"required":true,"identifier":"doc:\/\/Forked\/documentation\/Forked\/Mergeable\/merged(withSubordinate:commonAncestor:)","role":"symbol","url":"\/documentation\/forked\/mergeable\/merged(withsubordinate:commonancestor:)","type":"topic","title":"merged(withSubordinate:commonAncestor:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"merged"},{"text":"(","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"text":"Performs a 3-way merge, where ","type":"text"},{"type":"codeVoice","code":"self"},{"type":"text","text":" and "},{"type":"codeVoice","code":"other"},{"text":" are the most recent versions,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"codeVoice","code":"commonAncestor"},{"text":" is from a point in the past at which time the histories diverged.","type":"text"},{"type":"text","text":" "},{"text":"By comparing the recent values to the ancestor, you can determine what changed in each fork,","type":"text"},{"text":" ","type":"text"},{"text":"and decide how to merge. Where it is not possible to merge changes from each, ","type":"text"},{"code":"self","type":"codeVoice"},{"type":"text","text":" should"},{"type":"text","text":" "},{"text":"be considered the ","type":"text"},{"code":"dominant","type":"codeVoice"},{"type":"text","text":" fork, and "},{"code":"other","type":"codeVoice"},{"text":" subordinate. If you must choose, choose ","type":"text"},{"code":"self","type":"codeVoice"},{"text":".","type":"text"}]},"doc://Forked/documentation/Forked":{"url":"\/documentation\/forked","identifier":"doc:\/\/Forked\/documentation\/Forked","kind":"symbol","type":"topic","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"title":"Forked","role":"collection"}}}